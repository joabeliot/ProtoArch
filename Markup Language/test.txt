! stands for Comment
S stands for Square or we'll just have a identifier for different nodes

There are two parts for this Markup one is

    - Definition "S1(UID, Type, Parameters, Size, Color, Position, Comment)"
    - Connection "C1 S1->S2(VariableName),S3"

What are the things that this should include?

    - Unique Identification
        - (Alpha) or (Numeric) or (Alphanumeric)
    - Type/Shape
        - CSS ID (text)
    - Size
        - Width (num)
        - Height (num)
        - Border (num)
    - Color
        - Box Color (hex)
        - Border Color (hex)
    - Position
        - X (num)
        - Y (num)
    - Path
        - Dir (text\text)
    - Line
        - GoTo (num)
    - Parameters
        - Variable Name
        - Variable Type
        - Variable def line
    - Custom
        - Any (Literally Any)
    - Comment 
        - Any (text)

```
!Definition!
S1(TYUSY, idsquare, [ANY], (15,12,1), #B040E0D0, (14,13), "src/main/hello.py", 2, "This has to go to the top and am assigning @Joab to this task Specify the nodes with <S2>") !UID for the node will be directly assigned by the editor!
S2(DFGST, idoval, [ANY], (10,7,1), #2BFFE0D0, (26,13), "src/main/hello.py", 5, "Correct the Connections *mention the connections with -C1-")

!Connection!
C1 S1->S2 !if Connection Id is not given the edition will automatically assign a unique preceding Number Id for the Connection!

S3(WZPXB, idcircle, [ANY], (20,15,2), #FFB347D0, (30,18), "Circle node is responsible for validation -C2-")
S4(KLOVR, idrect, [ANY], (25,20,1), #2E8B57D0, (45,25), "Process the data and forward it to the next step <S3>") !UID for the node will be automatically assigned!
S5(NMVOP, idoval, [ANY], (18,10,1), #FFD700D0, (60,40), "Oval node handles the decision-making part -C3-")

C2 S5->S4 !This connection leads from node S5 to S4!
C3 S4->S3 !S4 connects to S3 for further processing!

S6(BUTYX, idrect, [ANY], (30,25,1), #DA70D6D0, (75,60), "This rectangle node represents an output component") !This component is not linked yet!
S7(POLTX, idsquare, [ANY], (12,10,1), #FF69B4D0, (12,45), "This node serves as the start point, it should link to multiple nodes <S5>,<S6>")
S8(ZXQPL, idrect, [ANY], (35,22,2), #4682B4D0, (50,55), "The rectangular node captures inputs and forwards them accordingly")
S9(FGVUS, idoval, [ANY], (18,12,1), #32CD32D0, (38,20), "Handle connection control for node interactions") !This node is highly critical!

C4 S3->S8 !Circle node connects to the rectangular input capture node!
C5 S8->S9 !Node S8 forwards input to S9 for further decision-making!

S10(JUKBR, idtriangle, [ANY], (16,16,2), #FF6347D0, (80,35), "This is a decision node and connects based on certain conditions") !UID automatically generated by editor!

C6 S9->S10 !Node S9 triggers the decision-making process in S10!
C7 S10->S6,S5 !S10 connects back to S6 and S5 depending on decisions made!
```

I can write the Definition and connection anywhere i want but it's interpreted so the nodes definition has to be defined before making connections... or if it's possible we'll make it so we can write the connection even before the node definition in case the node in the connection is not defined report missing error but still make the flowchart ignoring the missing node and it's connection